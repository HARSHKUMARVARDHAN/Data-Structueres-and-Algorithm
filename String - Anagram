An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Example 1:
Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]

code 

class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string , vector<string>> mp;
        vector<vector<string>> sol;
        // using const avoids changing original data
        // using string& help to operate without coping same data again
        for(const string& i:strs){
            string temp = i;
            sort(temp.begin(),temp.end());
            mp[temp].push_back(i);
        }
        for(const auto& i : mp){
            sol.push_back(i.second);
        }
        return sol;
    }
};
